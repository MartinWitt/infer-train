plugins {
    id 'java'
    id 'io.quarkus'
    id "com.diffplug.spotless" version "6.23.0"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'
    implementation 'io.quarkiverse.jgit:quarkus-jgit:+'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkiverse.githubaction:quarkus-github-action:+'
    testImplementation 'io.quarkus:quarkus-junit5'
    implementation group: 'org.buildobjects', name: 'jproc', version: '2.8.2'
    implementation "com.contrastsecurity:java-sarif:2.0"
}

group 'io.github.martinwitt.infer'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
spotless {
format 'misc', {
    // define the files to apply `misc` to
    target '*.gradle', '*.md', '.gitignore'

    // define the steps to apply to those files
    trimTrailingWhitespace()
    indentWithSpaces() // or spaces. Takes an integer argument if you don't like 4
    endWithNewline()
}
java {
    // don't need to set target, it is inferred from java
    palantirJavaFormat()
    // apply a specific flavor of google-java-format
    // fix formatting of type annotations
    formatAnnotations()
    // make sure every file has the following copyright header.
    // optionally, Spotless can set copyright years by digging
    // through git history (see "license" section below)
}
}
